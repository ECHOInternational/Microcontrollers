/*
Main function of this code: read temperature and humidity from an SHT31 sensor and display the values every 4 to 5 seconds. 

Code sources:
For the SHT31 sensor: https://github.com/adafruit/Adafruit_SHT31/blob/master/examples/SHT31test/SHT31test.ino
For the Wemos D1 Mini OLED shield: http://www.esp8266learning.com/wemos-oled-shield-example.php

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
LIBRARIES:
No need to install SPI and Wire libraries as these are already included in the Arduino platform 
Instructions for installing the SSD1306 and GFX.h libraries: https://siytek.com/wemos-d1-mini-oled-64x48-shield/#How-To-Install-The-Wemos-OLED-Shield-Library
Additional instructions for installing the SSD1306 library: https://www.arduino.cc/reference/en/libraries/adafruit-ssd1306-wemos-mini-oled/
The SSD1306 library referred to in the above websites has functionality for the Wemos D1 Mini Oled shield, which other OLED libraries may not have.
The Adafruit_SHT31.h library can be installed using the Library Manager in the Arduino IDE software, or it can be imported from github at:
   https://github.com/adafruit/Adafruit_SHT31 
*/
#include <Arduino.h>
#include <SPI.h>
#include <Wire.h>
#include "Adafruit_SHT31.h"
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>  

//DEFINITIONS AND PARAMETERS
//Temperature and humidity sensor parameters;
Adafruit_SHT31 sht31 = Adafruit_SHT31();


//Wemos OLED screen shield parameters;
#define OLED_RESET 0
Adafruit_SSD1306 display(OLED_RESET);
#define NUMFLAKES 10
#define XPOS 0
#define YPOS 1
#define DELTAY 2
#define LOGO16_GLCD_HEIGHT 16
#define LOGO16_GLCD_WIDTH  16

//SETUP--this section runs once when the Wemos board is first powered or the reset button is pressed
void setup() 
{
// Initialize the OLED display
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); //use something other than 0x3C if address differs
  display.clearDisplay(); //clear the buffer
  display.setTextColor(WHITE);
  display.display(); 

// Initialize the temperature/humidity sensor
  Serial.println("SHT31 test");
  display.setTextSize(1);
  display.setCursor(0,0);
  display.print("Finding   sensor"); //I added blank spaces after "Finding" to push "sensor" to a new line
  display.display();
  delay(2000); //display for 2 seconds; if, for example, you want to be able to see the 
               //data on the screen for 3 seconds, replace "2000" with "3000"
  display.clearDisplay(); // clear display
  

  if (! sht31.begin(0x44))        // Set to 0x45 for alternate i2c addr
  { 
  Serial.println("Sensor not found");
  display.setTextSize(1);
  display.setCursor(0,0);
  display.print("Sensor not found");
  display.display();
  delay(2000); //display for 2 seconds; if, for example, you want to be able to see the 
               //data on the screen for 3 seconds, replace "2000" with "3000"
  display.clearDisplay(); // clear display
  while (1) delay(1);
  }

}

//MAIN LOOP THAT REPEATS OVER AND OVER AGAIN AFTER SETUP
void loop() 
{
  DisplayReadings(); //Will display readings for 4 seconds
  delay(1000);  //After completing a 1 second (1000 milliseconds) delay,  
                //the process (DisplayReadings function) repeats, displaying
                //a new set of values.
}  

//FUNCTIONS CALLED FOR IN THE LOOP
void DisplayReadings()
{
  //Get temperature and humidity from the sensor
  float temp = sht31.readTemperature(); //this line tells the sensor to get temp in degrees Celsius
        //if you want temp in degrees Fahrenheight add this line of code: 
        //float tempF = temp * 1.8 + 32;
  float hum = sht31.readHumidity();

  //Display the temperature and humidity on the OLED
  display.setTextSize(2); //the number "2" specifies text size
  display.setCursor(2,5); //first number sets horizontal placement; second number sets vertical placement
  display.print(temp,0);  //displays temp in degrees C; if you had wanted temp in degrees F
                          //change this line of code to:
                          //displlay.print(tempF,0);
                          //see the "Get temp and humidity from the sensor" section for the line
                          //of code in that section needed for "tempF" here to work
                          //The "0" in the command specifies no decimal points.
  display.print(" ");
  display.setTextSize(1); //reset text size to "1" so that "degrees C" fits on the screen
  display.cp437(true); //this and the following line specifiy the degree symbol
  display.write(167);
  display.print("C"); //Replace "C" with "F" if you want to display Fahrenheit 
  
  display.setTextSize(2);
  display.setCursor(2, 35);
  display.print(hum,0);
  display.setTextSize(1);
  display.print(" %RH"); 
  
  display.display();
  delay(4000); //display for 4 seconds; if, for example, you want to be able to see the 
               //data on the screen for 3 seconds, replace "2000" with "3000"
  display.clearDisplay(); // clear display
  //display.ssd1306_command(SSD1306_DISPLAYOFF); //This line not used but included here as a useful
                                                 //line of code for other projects in which you do not want
                                                 // the OLED staying on and consuming battery power.                            
}
